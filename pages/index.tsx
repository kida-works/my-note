import type { NextPage } from 'next'
import { FC, ReactNode } from 'react'
import Link from 'next/link'
import Head from 'next/head'
import ItemList from './../src/ui/itemList'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import styled from 'styled-components'
import { getSortedPostsData } from '../src/lib/posts'

export async function getStaticProps() {
  const allPostsData = getSortedPostsData()
  return {
    props: {
      allPostsData,
    },
  }
}

type postDataResult = {
  id: string
  title: string
  date: { title: string; date: string }
  isEmpty: boolean
  excerpt: string
  orig: string
  children: ReactNode
}
type dataItemsType = {
  id: string
  title: string
  date: any
}
export const Item = (props: dataItemsType) => {
  return (
    <>
      <Link href={`./post/${props.id}`}>
        <p>
          {props.title} : {props.id} : {props.date}
        </p>
      </Link>
    </>
  )
}

const Home: NextPage<{ allPostsData: Array<postDataResult> }> = ({
  allPostsData,
}: {
  allPostsData: Array<postDataResult>
}) => {
  type Array = {
    title: string
    lists: string[]
  }

  const items = [
    {
      title: 'HTML/CSS',
      lists: ['レスポンシブ対応時のスタイルの指定方法', 'test', 'test01'],
    },
    {
      title: 'JavaScriptについて',
      lists: ['レスポンシブ対応時のスタイルの指定方法', 'test', 'test01'],
    },
    {
      title: 'React',
      lists: ['レスポンシブ対応時のスタイルの指定方法', 'React', 'test01'],
    },
    {
      title: 'Swift',
      lists: ['レスポンシブ対応時のスタイルの指定方法', 'Swift', 'test01'],
    },
    {
      title: 'WebAPI',
      lists: ['レスポンシブ対応時のスタイルの指定方法', 'WebAPI', 'test01'],
    },
  ]

  console.log(allPostsData)
  return (
    <div className={styles.container}>
      <Head>
        <title>my-note</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <header className={styles.header}>
        <h1>my-note</h1>
      </header>
      <main className={styles.main}>
        {/* {<ItemList items={items} />} */}
        <section className=''>
          <TableContents className=''>
            {allPostsData.map((item: postDataResult) => (
              <li key={item.id}>
                <Item title={item.title} id={item.id} date={item.date} />
              </li>
            ))}
          </TableContents>
        </section>
      </main>

      <footer className={styles.footer}>
        <p>footer</p>
      </footer>
    </div>
  )
}
// const Main = styled.main({
//   padding:"2.4rem 0"
// })

const TableContents = styled.ul({
  padding: '0 2.4rem',
  li: {
    listStyle: 'none',
    color: '#fff',
    padding: '0.8rem',
    cursor: 'pointer',
    ':hover': {
      color: '#B260EA',
      a: {
        display: 'block',
        color: '#B260EA',
        cursor: 'pointer',
        width: '100%',
      },
    },
  },
})

export default Home
